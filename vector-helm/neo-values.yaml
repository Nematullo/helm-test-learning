agent:
  enabled: true
  kind: DaemonSet

  config: |
    [sources.kubernetes_current_time_app_logs]
    type = "kubernetes_logs"
    exclude_paths_glob_patterns = ["/var/log/pods/*/vector/*.log"]
    extra_field_selector = "metadata.name=current-time-app-0"

    [transforms.customize_kube_metadata]
    type = "remap"
    inputs = ["kubernetes_current_time_app_logs"]
    source = '''
      del(.kubernetes.container_image)
      del(.kubernetes.pod_node_name)
      del(.kubernetes.pod_owner)
      del(.kubernetes.pod_labels)
      del(.kubernetes.namespace_labels)
      del(.kubernetes.node_labels)
      del(.file)
      del(.kubernetes.container_id)
      del(.kubernetes.container_image_id)
      del(.kubernetes.pod_ip)
      del(.kubernetes.pod_ips)
      del(.kubernetes.pod_uid)
    '''

    [transforms.force_timestamp]
    type = "remap"
    inputs = ["customize_kube_metadata"]
    source = '''
    .timestamp = now()
    '''

    [sinks.loki_from_ks8_current-time]
    type = "loki"
    inputs = ["force_timestamp"]
    endpoint = "http://loki.argocd.svc.cluster.local:3100"
    encoding.codec = "json"
    healthcheck.enabled = false
    healthcheck.uri = "http://loki.argocd.svc.cluster.local:3100/ready"

    [sinks.loki_from_ks8_current-time.labels]
    job = "current-time"
    application = "current-time-app"
    instance = "{{ kubernetes.pod_name }}"

    [sinks.console_kubernetes_current_time_app_logs]
    type = "console"
    inputs = ["force_timestamp"]
    encoding.codec = "json"

  resources:
    limits:
      cpu: 500m
      memory: 528Mi
    requests:
      cpu: 500m
      memory: 564Mi

  volumeMounts:
    - name: varlogpods
      mountPath: /var/log/pods
      readOnly: true
    - name: varlogcontainers
      mountPath: /var/log/containers
      readOnly: true
    - name: varlibdockercontainers
      mountPath: /var/lib/docker/containers
      readOnly: true

  volumes:
    - name: varlogpods
      hostPath:
        path: /var/log/pods
        type: Directory
    - name: varlogcontainers
      hostPath:
        path: /var/log/containers
        type: Directory
    - name: varlibdockercontainers
      hostPath:
        path: /var/lib/docker/containers
        type: Directory

service:
  enabled: true
  type: NodePort
  port: 8686
  targetPort: 8686
  nodePort: 30101
